<launch>
  <!-- define args -->
  <arg name="vis" default="true" /> <!-- run rviz? -->
  <!-- <arg name="freq" default="100" />
  <arg name="scale" default="0.1" />
  <arg name="damping" default="0.02" /> -->

  <!-- define params -->
  <!-- <param name="freq" value="$(arg freq)" /> -->
  <!-- <include file="$(find inverted_pendulum)/launch/load_kinematics_urdf.launch" /> -->
  <param name="robot_description" textfile="$(find sawyer_description)/urdf/sawyer.urdf" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <!-- <node name="joint_state_publisher" pkg= "joint_state_publisher" type="joint_state_publisher" /> -->
  <node name="pen_sim" pkg="inverted_pendulum" type="pen_marker.py"/>
  <!-- start the reference publisher -->
  <!-- <node name="reference_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
	<rosparam param="source_list">["partial_joint_states"]</rosparam>
	<param name="rate" value="$(arg freq)" />
	<remap from="joint_states" to="reference/joint_states" />
  </node>
  <node name="random_ref_publisher" pkg="baxter_ee_controller" type="random_valid_goal_generator.py"
  		launch-prefix="xterm -fn 10x20 -geometry 120x30 -e " required="true" >
	<remap from="joint_states" to="partial_joint_states"/>
  </node> -->
  <!-- load reference visualization stuff -->
  <!-- <group ns="reference" > -->
  	<!-- connect reference to actual -->
  	<!-- <node name="model_connector" pkg="tf" type="static_transform_publisher"
  		  args="0 0 0 0 0 0 base reference/base 100" />
  	<include file="$(find baxter_ee_controller)/launch/load_kinematics_urdf.launch" /> -->
  	<!-- robot state publisher -->
  	<!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
  	  <param name="tf_prefix" value="reference" />
  	</node>
  </group> -->


  <!-- start the IK controller and visualization -->
  <!-- <node name="ik_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
	<rosparam param="source_list">["ik_joint_states"]</rosparam>
	<param name="rate" value="$(arg freq)" />
  </node>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
  <node name="ik_controller" pkg="baxter_ee_controller" type="ik_controller_no_baxter_interface.py"
		output="screen">
	<remap from="joint_states" to="ik_joint_states"/>
	<param name="freq" value="$(arg freq)" />
	<param name="scale" value="$(arg scale)" />
	<param name="damping" value="$(arg damping)" />
  </node> -->


  <!-- rviz if needed -->
  <group if="$(arg vis)">
    <node pkg="rviz" type="rviz" respawn="false" name="rviz"
	  args="-d $(find inverted_pendulum)/config/pen_sim.rviz" />
  </group>

</launch>
